spring.profiles.active=dev

# Name to the handlemovies server
spring.application.name=filmproducer

#Will start the handlemovies server on port 8080
# URL to open is: http://localhost:8080/
server.port=8080

# postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/filmProducerDB
# Database user
spring.datasource.username=postgres
# Database password
spring.datasource.password=Soprasteria123!

spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.show-sql=true

# user authenticate
username = FilmProducerApp
userpass = Soprasteria123!

# admin
useradmin = admin
adminpass = Soprasteria123!


# Cloud kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=idosinchuk-filmproducer
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

filmproducer.kafka.post.producer=idosinchuk-filmproducer.kafka.post.producer
filmproducer.kafka.put.producer=idosinchuk-filmproducer.kafka.put.producer
filmproducer.kafka.patch.producer=idosinchuk-filmproducer.kafka.patch.producer
filmproducer.kafka.post.producer.director=idosinchuk-filmproducer.kafka.post.producer.director